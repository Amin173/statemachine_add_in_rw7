MODULE TRobSystemExample(SYSMODULE)
!=======================================================================================================================
! Copyright (c) 2018, ABB Schweiz AG
! All rights reserved.
!
! Redistribution and use in source and binary forms, with
! or without modification, are permitted provided that
! the following conditions are met:
!
!    * Redistributions of source code must retain the
!      above copyright notice, this list of conditions
!      and the following disclaimer.
!    * Redistributions in binary form must reproduce the
!      above copyright notice, this list of conditions
!      and the following disclaimer in the documentation
!      and/or other materials provided with the
!      distribution.
!    * Neither the name of ABB nor the names of its
!      contributors may be used to endorse or promote
!      products derived from this software without
!      specific prior written permission.
!
! THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
! AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
! IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
! ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
! LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
! DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
! SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
! CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
! OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
! THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
!=======================================================================================================================

    !-------------------------------------------------------------------------------------------------------------------
    !
    ! Module: TRobSystemExample [Autoloaded by the StateMachine AddIn]
    !
    ! Description:
    !   Exemplifies how a user can add custom RAPID records, custom inputs/outputs, as well as custom RAPID routines
    !   to the robot controller system.
    !
    !   Note 1:
    !   Custom inputs/outputs can for example be accessed from an external system via Robot Web Services (RWS).
    !
    !   Note 2:
    !   Custom routines can for example be implemented here or in another module. They can then be registered in the
    !   "TRobSystem" module, so that the StateMachine will be able to execute them when requested.
    !
    ! Author: Jon Tjerngren (jon.tjerngren@se.abb.com)
    !
    ! Version: 1.1
    !
    !-------------------------------------------------------------------------------------------------------------------

    !---------------------------------------------------------
    ! Example of custom RAPID records
    !---------------------------------------------------------
    LOCAL RECORD Example1Inputs
        jointtarget jt1;
        jointtarget jt2;
        jointtarget jt3;
    ENDRECORD

    !---------------------------------------------------------
    ! Example of custom inputs/outputs
    !---------------------------------------------------------
    ! Inputs to example 1.
    LOCAL VAR Example1Inputs example1_inputs;

    ! Input and output to example 2.
    LOCAL VAR jointtarget example2_jt_input;
    LOCAL VAR robtarget   example2_rt_output;

    !---------------------------------------------------------
    ! Example of custom RAPID routines
    !---------------------------------------------------------
    PROC example1()
        VAR jointtarget temp;
        temp := CJointT();
        current_tool := CTool();

        ! Move to jt3 (via jt1 and jt2).
        MoveAbsJ example1_inputs.jt1,v200,z20,current_tool;
        MoveAbsJ example1_inputs.jt2,v200,z20,current_tool;
        MoveAbsJ example1_inputs.jt3,v200,fine,current_tool;

        ! Idle a bit.
        WaitTime 2;

        ! Return to the start position (via jt2 and jt1).
        MoveAbsJ example1_inputs.jt2,v200,z20,current_tool;
        MoveAbsJ example1_inputs.jt1,v200,z20,current_tool;
        MoveAbsJ temp, v200, fine, tool0;
    ENDPROC

    PROC example2_non_blocking()
        ! Calculate a robtarget from a jointtarget and tool0.
        example2_rt_output := CalcRobT(example2_jt_input, tool0);
    ENDPROC
ENDMODULE
